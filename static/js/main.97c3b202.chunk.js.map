{"version":3,"sources":["components/TodoItem/TodoItem.js","components/Additem/AddItem.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","props","data","delItem","item","length","map","i","key","id","name","job","age","className","onClick","colSpan","AddItem","state","handelchange","e","setState","target","value","handelsubmit","preventDefault","addnewitem","console","log","onSubmit","this","onChange","type","placeholder","Component","App","items","deletItem","index","findIndex","splice","obj","newid","push","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"2TAyBeA,G,YAvBE,SAACC,GAAS,IAChBC,EAAgBD,EAAhBC,KAAKC,EAAWF,EAAXE,QACFC,EAAOF,EAAKG,OAAO,EACxBH,EAAKI,KAAI,SAAAC,GACN,OACA,wBAAIC,IAAKD,EAAEE,IACP,4BAAKF,EAAEG,MACP,4BAAKH,EAAEI,KACP,4BAAKJ,EAAEK,KACP,wBAAIC,UAAU,MAAMC,QAAS,kBAAIX,EAAQI,EAAEE,MAA3C,SAIN,4BAAI,wBAAIM,QAAQ,KAAZ,sBAGV,OACI,kBAAC,WAAD,KACIX,K,OCuBGY,G,kNAxCXC,MAAM,CACJP,KAAK,GACLC,IAAI,GACJC,IAAI,I,EAGNM,aAAa,SAACC,GACV,EAAKC,SAAL,eACKD,EAAEE,OAAOZ,GAAIU,EAAEE,OAAOC,S,EAI/BC,aAAa,SAACJ,GAEV,GADAA,EAAEK,iBACwB,KAAvBL,EAAEE,OAAOT,IAAIU,OAAwC,KAAxBH,EAAEE,OAAOX,KAAKY,OAAuC,KAAvBH,EAAEE,OAAOV,IAAIW,MACvE,OAAO,EAGP,EAAKrB,MAAMwB,WAAW,EAAKR,OAC3B,EAAKG,SAAS,CACVV,KAAK,GACLC,IAAI,GACJC,IAAI,KAERc,QAAQC,IAAI,EAAKV,Q,uDAGrB,OACI,yBAAKJ,UAAU,UAAUe,SAAUC,KAAKN,cACpC,0BAAMV,UAAU,OACZ,2BAAOA,UAAU,yBAAyBS,MAAOO,KAAKZ,MAAMP,KAAMoB,SAAUD,KAAKX,aAAcT,GAAG,OAAOsB,KAAK,OAAQC,YAAY,oBAClI,2BAAOnB,UAAU,cAAcS,MAAOO,KAAKZ,MAAMN,IAAKmB,SAAUD,KAAKX,aAAcT,GAAG,MAAMsB,KAAK,OAAQC,YAAY,mBACrH,2BAAOnB,UAAU,cAAcS,MAAOO,KAAKZ,MAAML,IAAKkB,SAAUD,KAAKX,aAAcT,GAAG,MAAMsB,KAAK,SAAUC,YAAY,mBACvH,2BAAOnB,UAAU,0BAA0BkB,KAAK,iB,GAlC9CE,cCsDPC,E,4MAlDbjB,MAAM,CACJkB,MAAM,CACJ,CAAC1B,GAAG,EAAEC,KAAK,SAASC,IAAI,qBAAqBC,IAAI,IACjD,CAACH,GAAG,EAAEC,KAAK,OAAOC,IAAI,sBAAsBC,IAAI,IAChD,CAACH,GAAG,EAAEC,KAAK,QAAQC,IAAI,iBAAiBC,IAAI,M,EAIhDwB,UAAY,SAAC3B,GACX,IAAI0B,EAAQ,EAAKlB,MAAMkB,MACnBE,EAAOF,EAAMG,WAAU,SAAA/B,GAAC,OAAEA,EAAEE,KAAKA,KACrC0B,EAAMI,OAAOF,EAAM,GACnB,EAAKjB,SAAS,CAACe,W,EAGjBV,WAAW,SAACe,GAAO,IACZL,EAAS,EAAKlB,MAAdkB,MACDM,EAAQN,EAAM9B,OAClBmC,EAAI/B,GAAGgC,EACPN,EAAMO,KAAKF,GACX,EAAKpB,SAAS,CACZe,W,uDAKF,OACE,yBAAKtB,UAAU,OACb,wCACA,6BAASA,UAAU,aACjB,2BAAOA,UAAU,uBACf,+BACE,4BACE,oCACA,mCACA,mCACA,wCAGF,+BACE,kBAAC,EAAD,CAAUX,KAAM2B,KAAKZ,MAAMkB,MAAOhC,QAAS0B,KAAKO,cAGtD,kBAAC,EAAD,CAASX,WAAYI,KAAKJ,mB,GA5ClBQ,aCOEU,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCRNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLlC,QAAQkC,MAAMA,EAAMC,c","file":"static/js/main.97c3b202.chunk.js","sourcesContent":["import React, { Fragment } from \"react\"\r\nimport \"./TodoItem.css\"\r\nconst TodoItem = (props)=>{\r\n    const {data,delItem} = props;\r\n        const item = data.length>0 ?\r\n        (data.map(i=>{ \r\n            return(\r\n            <tr key={i.id}>\r\n                <td>{i.name}</td>\r\n                <td>{i.job}</td>\r\n                <td>{i.age}</td>\r\n                <td className=\"del\" onClick={()=>delItem(i.id)}>x</td>   \r\n            </tr>\r\n            )\r\n        }))\r\n        :(<tr><td colSpan=\"4\">No Item To Show !</td></tr>)\r\n\r\n\r\n    return(\r\n        <Fragment >\r\n           {item}\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default TodoItem","import React, { Component } from \"react\"\r\nimport \"./AddItem.css\"\r\nclass AddItem extends Component{\r\n    state={\r\n      name:\"\",\r\n      job:\"\",\r\n      age:\"\"\r\n    }\r\n\r\n    handelchange=(e)=>{\r\n        this.setState({\r\n            [e.target.id]:e.target.value\r\n        })\r\n    }\r\n\r\n    handelsubmit=(e)=>{\r\n        e.preventDefault();\r\n        if(e.target.age.value === \"\" || e.target.name.value === \"\" || e.target.job.value === \"\"){\r\n            return false\r\n        }\r\n        else{        \r\n            this.props.addnewitem(this.state);\r\n            this.setState({\r\n                name:\"\",\r\n                job:\"\",\r\n                age:\"\"\r\n            })}\r\n            console.log(this.state)\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"additem\" onSubmit={this.handelsubmit}>\r\n                <form className=\"row\">\r\n                    <input className=\"col p-2 mt-1 mb-1 mr-1\" value={this.state.name} onChange={this.handelchange} id=\"name\" type=\"text\"  placeholder=\"enter your Name\"/>\r\n                    <input className=\"col p-2 m-1\" value={this.state.job} onChange={this.handelchange} id=\"job\" type=\"text\"  placeholder=\"enter your Job\"/>\r\n                    <input className=\"col p-2 m-1\" value={this.state.age} onChange={this.handelchange} id=\"age\" type=\"number\"  placeholder=\"enter your Age\"/>\r\n                    <input className=\"col p-2  mt-1 mb-1 ml-1\" type=\"submit\"/>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem","import React, { Component } from 'react';\nimport './App.css';\nimport TodoItem from './components/TodoItem/TodoItem'\nimport AddItem from './components/Additem/AddItem'\n\nclass App extends Component{\n  state={\n    items:[\n      {id:0,name:\"Marina\",job:\"frontEnd developer\",age:23},\n      {id:1,name:\"Magy\",job:\"FullStack developer\",age:24},\n      {id:2,name:\"Fatma\",job:\"Game developer\",age:23}\n    ]\n  }\n\n  deletItem = (id)=>{\n    let items = this.state.items;\n    let index =items.findIndex(i=>i.id===id);\n    items.splice(index,1);\n    this.setState({items});\n  }\n\n  addnewitem=(obj)=>{\n    let {items} = this.state;\n    let newid = items.length;\n    obj.id=newid;\n    items.push(obj);\n    this.setState({\n      items\n    })\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <h1>ToDo App</h1>\n        <section className=\"container\" > \n          <table className=\"table table-striped\">\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Job</th>\n                <th>age</th>\n                <th>Action</th>\n              </tr>\n            </thead>\n              <tbody>\n                <TodoItem data={this.state.items} delItem={this.deletItem}/>\n              </tbody>\n          </table>\n          <AddItem addnewitem={this.addnewitem}/>\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\n// import $ from 'jquery';\n// import Popper from 'popper.js';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}